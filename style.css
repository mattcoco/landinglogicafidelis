/* Importación de fuentes y definición de variables locales */
@import url('https://fonts.googleapis.com/css2?family=Muli:wght@400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Alfa+Slab+One&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Chivo:wght@400&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@700&display=swap');

:root {
	--color-primero: #0027FF;
	--color-segundo: #5800FF; /* rgba(88, 0, 255, 1)*/
	--color-tercero: #D800FF;
	--color-texto: #444;
}

/* Clases sin utilizar: --- */
/* Por hacer: linea 98 elegir bien el color, que sea un color general y reutilizable
comentar la seccion del landing*/

/*** SELECTORES GENERALES ***/
* {
	box-sizing: border-box;
 }

p {
	color: var(--color-texto);
}

a {
	text-decoration: none;
	/* Si pongo color: red se pondra siempre rojo, estando visitado o no. Pues con inherit misma logica pero con el color de origen */
	color: inherit;
}

body {
	font-family: 'Muli', sans-serif;
	display: flex;
	flex-direction: column;
	align-items: center;
	margin: 0;
	overflow-x: hidden;
}

/*** MENU DE NAVEGACIÓN ***/
/* Definimos los elementos ul y li. Una clase .peque oculta el menú ul en dispositivos pequeños; en el mediaQuery la clase el ul.peque se muestra y el ul.grande se oculta */
nav {
	width: 100vw;
	display: flex;
	align-items: center;
	justify-content: center;
	padding: 0 15px;
}
nav ul {
	margin-left: 30px;
	list-style-type: none;	
	display: flex;
	align-items: center;
	justify-content: center;
	text-align: center;
	padding: 0;
}
/* El menú .peque se oculta en dispositivos pequeños y se muestra a través del button, que despliega el menú */
nav ul.peque {
	display: none;
}
nav li { 
	position: relative;
	text-align: center;
	display: inline-block;
	margin: 0 8px;
	padding: 12px 0;
	text-transform: uppercase;
}

/* Para el efecto hover de cada botón; en este caso el border se ensancha. Aplicamos la clase .li-border */
nav li .li-border {
	position: absolute;
	top: 0;
	left: 0;
	width: 0;
	height: 100%;
	border-bottom: solid 5px var(--color-primero);	
	transition: width ease 0.6s;
}
nav li:hover .li-border {
	width: 100%;
	transition: width ease 0.6s;
}

/* La clase .highlight pondrá el li en forma de botón, aplicamos la clase .highlight */
nav li.highlight {
	color: inherit;
	padding-left: 9px;
	padding-right: 9px;
	border-radius: 8px;
	background-color: var(--color-segundo);
	transition: background-color ease 0.3s, color ease 0.3s;
}
nav li.highlight:hover {
	background-color: var(--color-tercero);
	color: #FFF;
	transition: background-color ease 0.3s, color ease 0.3s;
}
/* nav li.highlight a:hover {
	color: rgb(126, 119, 119);
} */


/* Para el botón de menú desplegable, es decir el fa-solid fa-bars */
nav button {
	font-size: 1rem;
	border: none;
	border-radius: 5%;
	padding: 8px 12px;
	display: none;
}

/* mediaQuery para dispositivos pequeños */
@media (max-width: 768px) {
	nav {
		padding: 0;
		justify-content: space-around;		
		display: flex;
		flex-wrap: wrap;
	}
	nav ul.grande {
		display: none;
	}
	nav ul.peque {
		margin: 0 0 10px 0;
		width: 100%;
		background-color: rgba(0, 0, 0, 0.3);
		/* max-height: 0;
		transition: max-height 0.3s ease; */
	}
	nav ul.peque.show {		
		display: block;
		/* max-height: 1000px;
		transition: max-height 0.3s ease; */
	}

	nav li {
		display:block;
		border: solid 1px #CCC;
	}
	nav li:hover {
		background: var(--color-segundo);
	}
	nav li .li-border {
		display: none;
	}
	
	nav button {
		border: none;
		display: inline;
	}
}

/*** LANDING ***/
.landing {
	overflow: hidden;
	width: 100vw;
	height: 80vh;
	position: relative;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	background: rgb(216,0,255);
	background: linear-gradient(45deg, rgba(216,0,255,1) 0%, rgba(88,0,255,1) 50%, rgba(85,24,255,1) 100%);
}

/* Las letras del landing; son las que van rotando en script.js */
.landing h1 {
	position: absolute;
	display: block;
	width: 88vw;
	transform: translateY(50%);
	margin: 0;
	color: #FFF;
	font-family: 'Inter', cursive, sans-serif;
	text-align: center;
	line-height: 5rem;
	font-size: 5rem;
	text-shadow: 3px 3px rgba(0, 0, 0, 0.1);
	opacity: 0;
	filter: blur(4px);	
	transition: opacity 0.5s ease, filter 0.8s ease;
}

.landing h1:nth-child(1), .landing h1:nth-child(3) {
	transform: translateY(-50%);
}

.landing h1.active {	
	opacity: 1;
	filter: blur(0);
	transition: opacity 0.5s ease, filter 0.8s ease;
}

/* A partir de ciertas medidas las letras toman otros tamaños para adaptarse */
@media (max-width: 993px) {
	.landing h1 {		
		line-height: 3.5rem;
		font-size: 3.5rem;
	}
}

@media (max-width: 577px) {
	.landing h1 {		
		line-height: 2rem;
		font-size: 2rem;
	}
}



/*** SECTION ***/
section {
	/* padding: 20px 0; */
	width: 100%;
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
}
section:last-child {
	padding-bottom: 0;
}
section h1, h2 {
	width: 100%;
	text-align: center;
	font-family: 'Inter', 'serif';	
	color: #222;	
	font-size: 5rem;
}
section h1 {
	margin: 10px;
	transition: color ease 0.3s;
}
section h1:hover {
	color: var(--color-segundo);
	transition: color ease 0.3s;
}
section h2 {
	font-size: 2rem;
}
section h3 {
	font-family: 'Muli', sans-serif;
}
section .columna-texto {
	text-align: justify;
	width: 600px;
	margin-right: 40px;
}
section .columna-imagen {
	width: 350px;
	height: 400px;
	background: black;
	background-size: cover;
	background-position: center;
	border-radius: 20px;
}

/* section.fondo-calor {
	background: rgb(255,0,0);
	background: linear-gradient(-45deg, rgba(255,0,0,1) 0%, rgba(250,255,0,1) 100%);
}

section.fondo-calor h1, h2, p {
	color: white;
} */

/*** SECCIÓN: Barra de "Quiero..."s ***/
/* Los "quiero..." (clase .quiero) están en un contenedor llamado .barra-quiero */
section .barra-quiero {
	position: relative;	
	display: flex;
	flex-wrap: wrap;
	height: 9.5em;
	padding: 0;
	margin: 0 0 20px 0;
	width: 100vw;
	
}
section .barra-quiero .quiero {
	overflow: hidden;
	position: absolute;
	bottom: 0;
	width: 25%;
	padding: 0 10px;
	max-height: 9.5em;	
	background: #222;
}
/* A cada quiero le damos progresivamente un margen para posicionarlo */
section .barra-quiero .quiero:nth-child(2) {
	margin-left: 25%;
}
section .barra-quiero .quiero:nth-child(3) {
	margin-left: 50%;
}
section .barra-quiero .quiero:nth-child(4) {
	margin-left: 75%;
}
/* El icono del triángulo en cada quiero, fa-caret-down */
section .barra-quiero .quiero i {
	color: #FFF;
	font-size: 1.5rem;	
	display: inline-block;
	text-align: right;
	transform: rotate(0deg);	
	transition: transform ease-in 0.3s;
}
section .barra-quiero .quiero:hover i {
	transform: rotate(90deg);
	transition: transform ease-in 0.3s;
}

/* En los h3 ponemos "Quiero" y en los h2 ponemos qué quuiero. El texto está en <p> */
section .barra-quiero h3 {	
	color: #FFF;
	font-size: 1rem;
	line-height: 0.75rem;	
	text-transform: uppercase;
}
section .barra-quiero h2 {
	color: #FFF;
	font-size: 1.5rem;	
	line-height: 1.75rem;	
	text-transform: uppercase;
	display: inline;
}
section .barra-quiero p {
	color: #FFF;
	font-size: 1rem;
	line-height: 1rem;
	opacity: 0;
}
/* Cada .quiero se levanta con un hover. La propiedad en la transición es un maxheight que nunca se alcanzarán ya que con height no se pueden hacer transiciones */
section .barra-quiero .quiero:hover {
	background-color: var(--color-segundo);
	transition: background-color ease 0.3s;
	max-height: 500px;
	transition: max-height ease-in 0.7s;
}
section .barra-quiero .quiero:hover p {
	opacity: 1;	
	transition: opacity ease 0.3s;
}

/*** SECCIÓN: INFO1 (¿Por qué Logica Fidelis?) ***/
.info1 {
	transform: translateX(200%);
	justify-content: space-between;
	padding: 0 10vw;
}
.info1 .columna-texto {
	width: 500px;
}
.info1 .columna-texto h2 {
	text-align: left;
	margin: 0;
}

/*** SECCIÓN: INFO2/ OFERTA DE SERVICIOS ***/
/* Se trata del gráfico de círculos que informa de los servicios ofrecidos */
.info2 {
	transform: translateX(-200%);
}
section .desktop .servicios-container {
	position: relative;
	display: flex;
	align-items: center;
	justify-content: center;
	width: 100vw;
	transform: translateX(200%);
	transition: transform 0.4s ease;
}
section .desktop .servicios-container.mostrar {
	transform: translateX(0);
	transition: transform 0.4s ease;
}
/* Definición de la clase círculo. Hay circulo grande (el central) y circulo pequeño (el de cada servicio) */
section .desktop .servicios-container .circulo {
	border-radius: 50%;
	box-shadow: rgba(149, 157, 165, 0.4) 0px 8px 24px;
}
section .desktop .servicios-container .circulo.grande {
	height: 400px;
	width: 400px;
	position: relative;	
	display: flex;
	align-items: center;
	justify-content: center;
	background: #FFF;
	background-image: url(/LogicaFidelisLogo_Serifa.png);
	background-size: 300px;
	background-position: center;
	background-repeat: no-repeat;
	margin-bottom: 20px;
}
/* Cada bloque contiene el texto + el círculo de cada servicio */
section .desktop .servicios-container .bloque {
	position: absolute;
	display: flex;
	align-items: center;
	width: 450px;
	padding: 15px;
}
/* Posicionamiento de cada bloque (circulo + texto) */
section .desktop .servicios-container .bloque:nth-child(1) {
	top: 30px;
	left: 80px;
	transform: translateX(-100%);
	justify-content: right;
}
section .desktop .servicios-container .bloque:nth-child(2) {
	bottom: 30px;
	left: 80px;
	transform: translateX(-100%);	
	justify-content: right;
}
section .desktop .servicios-container .bloque:nth-child(3) {
	top: 30px;
	right: 80px;
	transform: translateX(100%);	
	justify-content: left;
}
section .desktop .servicios-container .bloque:nth-child(4) {
	bottom: 30px;
	right: 80px;
	transform: translateX(100%);	
	justify-content: left;
}

section .desktop .servicios-container .bloque .circulo.peque {
	display: flex;
	align-items: center;
	justify-content: center;
	height: 80px;
	width: 80px;
	background-color: #FFF;
	color: #222;
	padding: 0 20px;
	font-size: 2.5rem;	
	transition: color 0.25s ease;
}
/* Margen para cada circulo pequeño, dependiendo de si está a la izquierda (1 y 2) o a la derecha (3 y 4) */
section .desktop .servicios-container .bloque:nth-child(1) .circulo.peque {
	margin-left: 20px;
}
section .desktop .servicios-container .bloque:nth-child(2) .circulo.peque {
	margin-left: 20px;
}
section .desktop .servicios-container .bloque:nth-child(3) .circulo.peque {
	margin-right: 20px;
}
section .desktop .servicios-container .bloque:nth-child(4) .circulo.peque {
	margin-right: 20px;
}

section .desktop .servicios-container .bloque:hover .circulo.peque {
	color: var(--color-segundo);
	transition: color 0.25s ease;
}

section .desktop .servicios-container .bloque .texto {
	display: flex;
	flex-direction: column;
	text-align: right;
	border-radius: 10px;
	padding: 8px;	
	transition: background-color ease 0.3s, color ease 0.3s;
}
section .desktop .servicios-container .bloque:hover .texto {
	color: #FFF;
	background-color: rgba(88, 0, 255, 0.9);
	transition: background-color ease 0.3s, color ease 0.3s;
}

section .desktop .servicios-container .bloque:nth-child(3) .texto,
section .desktop .servicios-container .bloque:nth-child(4) .texto {
	text-align: left;
}
section .desktop .servicios-container .bloque h3 {
	margin: 0;
	display: block;
	text-transform: uppercase;
}

section .desktop .servicios-container .bloque p {
	margin: 0;
	display: block;
	color: inherit;
}
/* Clases para resolución tableta y móvil */
/* h1 //.desktop .servicios-container .bloque .icono //.texto*/
section.info2 .tablet {
	width: 100%;
}

section.info2 .tablet h1 {
	margin: 0;
	background-color: red;
}
section.info2 .tablet .servicios-container {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
}
section.info2 .tablet .servicios-container .container {
	display: flex;
	align-items: center;
	justify-content: center;
	width: 50%;
	margin: 0;
}

section.info2 .tablet .servicios-container .container .bloque {
	width: 98%;
	height: 200px;
	background: rgb(216,0,255);
	background: linear-gradient(45deg, rgba(216,0,255,1) 0%, rgba(88,0,255,1) 50%, rgba(85,24,255,1) 100%);
	margin: 5px;
	border-radius: 30px;
	color: #FFF;
}

/*** SECCIÓN: Portafolio ***/
.info3 {
	transform: translateX(200%);
}
/* Cada imagen (.portfolio-ejemplo se contiene por un contenedor (.portfolio-container) */
section.portfolio .portfolio-container {
	width: 100vw;
	display: flex;
	align-items: center;
	justify-content: center;
	flex-wrap: wrap;
}

/* Este container ad-hoc permite insertar un overflow-hidden para que la imagen no se escape de su cuadrado cuando hacemos la animación scale */
section.portfolio .portfolio-container .container {
	display: inline;
	overflow: hidden;
	width: 25%;
	height: 25vw;
}
/* Aqui ponemos la imagen en sí; el background: url queda definido en el html. Tiene una animación para ampliar un poco todo cuando se hace hover */
section.portfolio .portfolio-container .portfolio-ejemplo {
	height: 25vw;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	text-align: center;
	background-size: cover;
	background-position: center;
	background-repeat: no-repeat;
	padding: 20px;
	transform: scale(1);	
	transition: transform 0.3s ease-in;
}
section.portfolio .portfolio-container .portfolio-ejemplo:hover {
	transform: scale(1.08);
	transition: transform 0.3s ease-in;
}
/* Una pantalla transparente negra que aparece en el momento del hover, por estética */
section.portfolio .portfolio-container .portfolio-ejemplo::before {
	content: '';
	position: absolute;
	width: 100%;
	height: 100%;
	background-color: rgba(0, 0, 0, 0.0);
	transition: background-color 0.3s ease-in;
}
section.portfolio .portfolio-container .portfolio-ejemplo:hover::before {
	background-color: rgba(0, 0, 0, 0.35);
	transition: background-color 0.3s ease-in;
}
section.portfolio .portfolio-container .portfolio-ejemplo p {
	color: #FFF;
	opacity: 0;
	z-index: 99;
}
section.portfolio .portfolio-container .portfolio-ejemplo a {
	z-index: 99;
	width: 50%;
}
section.portfolio .portfolio-container .portfolio-ejemplo a button {
	background-color: var(--color-primero);
	color: #FFF;
	padding: 10px;
	border: none;
	border-radius: 5px;
	font-family: inherit;
	opacity: 0;
}
section.portfolio .portfolio-container .portfolio-ejemplo:hover p {
	opacity: 1;
	transition: opacity 0.3s ease-in;
}
section.portfolio .portfolio-container .portfolio-ejemplo:hover button {
	opacity: 1;
	transition: opacity 0.3s ease-in,
				background-color ease-in 0.3s,
				color ease-in 0.3s;
	cursor: pointer;
}
section.portfolio .portfolio-container .portfolio-ejemplo:hover button:hover {
	background-color: #FFF;
	color: var(--color-primero);
	transition: background-color ease-in 0.3s,
				color ease-in 0.3s;
}


@media (max-width: 768px) {
	section.portfolio .portfolio-container .portfolio-ejemplo {
		width: 50%;
		height: 50vw;
	}

	section.portfolio .portfolio-container .portfolio-ejemplo:hover {
		transform: scale(1);
	}
}

/*** SECCION: CONTACTO; esto pertenece a la pagina contacto ***/
/* La página tiene 3 elementos
	- .elegir pregunta, donde residen dos botones que cambian la interfaz 
	- .form-container, que es donde reside el formulario 
	- .form-container-addendum, donde reside la informacion suplementaria */

section.contacto .contenedor-titulo {
	height: 80vh;
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

section.contacto .contenedor-titulo h1 {
	font-size: 7rem;
	text-transform: uppercase;
	margin: 0;
}
/* Anulo el efecto hover general... No debería tener que hacerlo; debería haber un efecto hover específico; no uno general que se anula en el específico */
section.contacto .contenedor-titulo h1:hover {
	color: inherit;
}
section.contacto .contenedor-titulo h2 {
	color: var(--color-segundo);
	margin-top: 20px;
	font-family: 'Chivo', sans-serif;
}
section.contacto h3 {
	display: block;
	width: 100%;
	text-align: center;
}

section.contacto .elegir-pregunta {
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	/* border-top: 1px solid #CCC;
	border-bottom: 1px solid #CCC; */
}
section.contacto button {
	margin: 10px 0;
	display: block;
	padding: 10px 0;
	width: 90vw;
	/* Para eliminar el borde que viene por defecto */
	border: 0;
	border-radius: 5px;
	background-color: #CCC;
	color: #FFF;
	font-family: inherit;
	font-size: 1.5rem;
	text-transform: uppercase;
	cursor: pointer;
	transition: background-color 0.3s ease;
}
@media (min-width: 770px) {
	section.contacto .elegir-pregunta {
		flex-direction: row;
		justify-content: space-evenly;
	}
	section.contacto button {
		height: 15vh;
		width: 40vw;
	}
}
section.contacto button.active {
	background-color: var(--color-segundo);
}
section.contacto button:hover {
	transition: background-color 0.3s ease;
	background-color: var(--color-segundo);
}
/* section.contacto .container {
	position:relative;
	display:flex;
	flex-direction: row;
	align-items: center;
	justify-content: center;
} */
section.contacto .form-container {
	/* Este display:none cambia con la clase .active */
	display: none;
	/* Pongo un height comun al .form-container y el .form-container-addendum. Si no cambia la estructura de la pagina cuando cambio de una pregunta a otra */
	height: 830px;
	width: 100%;
	padding: 20px 20px;
	/* De la misla manera que el height tiene que ser igual en el .form-container y en el .form-container-addendum, el margin tiene que ser igual; si no se desequilibran */
	margin-bottom: 30px;
	border: solid 8px #555;
	border-radius: 20px;
}
/* Cuando tengo un dispositivo grande, .form-container y .form-container-addendum deben tener el mismo height: Xpx para que la pagina quede pareja. Si dejo esos Xpx en resoluciones pequeñas queda un espacio vacío; el height:auto es un height "excusa" que permite no dejar ese espacio vacio*/
@media (max-width: 769px) {
	section.contacto .form-container {
		height: auto;
	}
}
section.contacto .form-container.active {
	display: block;
}
section.contacto .form-container form {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-around;
}
section.contacto .form-container form h3,
section.contacto .form-container form h2 {
	margin: 15px 0;
}
section.contacto .form-container form .inp {
	position: relative;
	width: 40%;
	margin: 20px 0;
}
section.contacto .form-container form .inp p {
	position: absolute;
	top: 0;
	transform: translateY(-50%)
}
section.contacto .form-container form .inp input {
	display: block;
	width: 100%;
	padding: 5px;
	border: 0;
	border-bottom: 2px solid #CCC;
	color: inherit;	
}
section.contacto .form-container form .inp::before {
	content: '';
	position: absolute;
	bottom: 0;
	width: 0;
	height: 0;
	border-bottom: 2px solid var(--color-segundo);
}
section.contacto .form-container form .inp:hover::before {
	width: 100%;
	transition: width 0.3s ease-in;
}
section.contacto .form-container form .inp input:focus {
	outline: 0;
	color: var(--color-segundo);
}
section.contacto .form-container form .checkbox-container {
	display: flex;
	flex-direction: column;
	width: 50%;
}
section.contacto .form-container form .checkbox-container p {
	display: inline-block;
	margin: 0;
}
section.contacto .form-container button {
	margin-top: 20px;
}

section.contacto .form-container-addendum {
	height: 830px;	
	width: 100%;
	/* Cambia a diplay:flex con active */
	display: none;
	align-items: center;
	justify-content: center;
	background-image: url(/dylan-gillis-KdeqA3aTnBY-unsplash.jpg);
	background-size: cover;
	background-position: center;
	background-repeat: no-repeat;
	padding: 15px 0;
	margin-bottom: 30px;
	border-radius: 20px;
	
}

@media (max-width: 769px) {
	section.contacto .form-container-addendum {
		height: auto;
	}
} 
section.contacto .form-container-addendum.active {
	/* Pero por qué al form-container le debo poner display:block (si pongo display:flex todo se descuadra, pero aqui el display:flex queda bien*/
	display: flex;
}
section.contacto .form-container-addendum .cuadro-informacion {
	height: 100%;
	width: 80%;
	display:flex;
	flex-direction: column;	
}
section.contacto .form-container-addendum .cuadro-informacion .cuadro-texto {
	width: 100%;
	background-color: #EEE;
	border-radius: 4px;
	border-color: 4px;
	margin-top: 15px;
	padding: 15px;
}
section.contacto .form-container-addendum .cuadro-informacion .cuadro-texto:first-of-type {	
	margin-top: 0px;
}
section.contacto .form-container-addendum .cuadro-informacion .container {
	display: flex;
	height: 7rem;
	align-items: center;
	margin-bottom: 10px;
}
section.contacto .form-container-addendum .cuadro-informacion .container .icon-container {
	position: absolute;
	height: 7rem;
	width: 7rem;
	display: flex;
	align-items: center;
	justify-content: center;
}

section.contacto .form-container-addendum .cuadro-informacion .container .icon-container i {
	position: absolute;
	/* El top y el left salen de (height .icon-container - font-size .icon-container)/2*/
	top: 0.75rem;
	left: 0.75rem;
	font-size: 5.5rem;
	color: rgba(0, 0, 0, 0.8);
}

section.contacto .form-container-addendum .cuadro-informacion .container .icon-container i.fa-arrow-down {
	left: 2.75rem;
	font-size: 2rem;
	color: #444;
	/* Anulamos el top:0 del i general anterior */
	top: auto;
	bottom: -1.25rem;
}
section.contacto .form-container-addendum .cuadro-informacion .container .icon-container h1 {
	display: inline;
	font-size: 4rem;
}
section.contacto .form-container-addendum .cuadro-informacion .container h3 {
	text-align: left;
	margin-left: 8rem;
	margin-right: 10px;
	display: inline;	
}


@media (min-width: 769px) {
	/* La anchura del .form-container y el .form-container-addendum es de la mitad en resoluciones grandes para que queden uno al lado del otro. De hecho, un poco menos de la mitad para dar algo de margen a los lados*/
	section.contacto .form-container, section.contacto .form-container-addendum {
		width: 48%;
	}
	section.contacto .form-container {
		margin-right: 10px;
	}
}

/***  SECTION: SERVICIOS (la de la página servicios) ***/
section.servicios {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	width: 100vw;
	padding: 0;
	overflow: hidden;
}

section.servicios h1 {
	font-family: inherit;
	color: white;
	margin: 0;
	background-color: #333;
	font-size: 5rem;
	text-transform: uppercase;
}

section.servicios .bg-even {
	background: rgb(255,146,0);
	background: linear-gradient(45deg, rgba(255,146,0,1) 0%, rgba(255,0,102,1) 100%); 
}
section.servicios .container-info {
	display: flex;
	align-items: center;
	padding: 30px;
	width: 100vw;
}
section.servicios .container-info .columna-texto {
	/* display:flex;
	flex-direction: column; */
	width: 45vw;
	margin: 0 30px;
}
section.servicios .bg-odd .container-info .columna-texto {
	transform: translateX(-200%);
}
section.servicios .bg-even .container-info .columna-texto {
	transform: translateX(200%);
}
section.servicios .container-info .columna-texto.mostrar {
	transform: translateX(0);	
	transition: transform 0.6s ease;
}
section.servicios .container-info .columna-texto h2 {
	padding: 3px;
	margin: 0;
}
section.servicios .bg-odd .container-info .columna-texto h2 {
	background-color: var(--color-segundo);
	color: #FFF;
}
section.servicios .bg-even .container-info .columna-texto h2 {
	background-color: #FFF;
	color: rgba(255,0,102,1);
	color: linear-gradient(45deg, rgba(255,146,0,1) 0%, rgba(255,0,102,1) 100%); 
}
section.servicios .container-info .columna-texto h3 {
	text-align: center;
}
/* Poner solo si .columna-texto la hacemos display: flex; */
/* section.servicios .container-info .columna-texto p,
section.servicios .container-info .columna-texto h2
section.servicios .container-info .columna-texto h3 {
	margin: 5px; 
}*/

section.servicios .bg-even .container-info .columna-texto p,
section.servicios .bg-even .container-info .columna-texto h3 {
	color: #FFF;
}
section.servicios .container-info .columna-texto img {
	margin-left: 100px;
	height: 80px;
	text-align: center;
}
section.servicios .container-info .columna-imagen {
	width: 45vw;
	margin: 0 30px;
	opacity: 0;
}

section.servicios .container-info .columna-imagen.mostrar {
	opacity: 1;
	transition: opacity 1s ease 0.5s;
}

/*** FOOTER ***/
/* En el footer la información se separa por .barras */
footer {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	width: 100vw;
}
footer a:hover {
	color: var(--color-segundo);
}

footer .barra {
	display: flex;
	align-items: center;
	justify-content: space-around;
	height: 10vh;
	width: 100vw;
	border-top: #CCC solid 1px;
}
footer .barra i {
	margin-right: 5px;	
	margin-left: 5px;
}
footer .barra p.footer-submit {
	text-transform: uppercase;
	color: var(--color-segundo);
}
footer .barra p.footer-submit:hover i {
	animation: bailarpoco 2s ease-in-out infinite;
}
footer .barra p.footer-submit:hover a {
	color: #222;
}
footer .barra ul li {
	margin: 0 5px;
	list-style-type: circle;
	float: left;
	display: inline;
}


/* Animaciones */
/* Esta animación hace que el elemento se traslade lentamente de arriba hacia abajo */
.flotar-poco {	
	animation: flotarpoco 2s ease-in-out infinite;
}
@keyframes flotarpoco {
	0% {
		transform: translatey(5%);
	}
	50% {
		transform: translatey(-5%);
	}
	100% {
		transform: translatey(5%);
	}
}

/* Como .flotar-poco, pero más suave; útil en imágenes grandes */
.flotar-muy-poco {	
	animation: flotarmuypoco 6s ease-in-out infinite;
}
@keyframes flotarmuypoco {
	0% {
		transform: translatey(2%);
	}
	50% {
		transform: translatey(-2%);
	}
	100% {
		transform: translatey(2%);
	}
}

/* Como .flotar-muy-poco, pero con la animación invertida (sirve para dar variedad) */
.flotar-muy-poco-reves {	
	animation: flotarmuypocoreves 6s ease-in-out infinite;
}
@keyframes flotarmuypocoreves {
	0% {
		transform: translatey(-2%);
	}
	50% {
		transform: translatey(2%);
	}
	100% {
		transform: translatey(-2%);
	}
}

/* Como .flotar-poco, pero de derecha a izquierda  */
.bailar-poco {	
	animation: bailarpoco 2s ease-in-out infinite;
}

@keyframes bailarpoco {
	0% {
		transform: translatex(10%);
	}
	50% {
		transform: translatex(-10%);
	}
	100% {
		transform: translatex(10%);
	}
}

/* Efecto de sombra parpadeante; se aplica en la sección de oferta de servicios */
.circulo .ripple {
	position: absolute;
	background-color: rgba(0, 0, 0, 0.2);
	width: 100px;
	height: 100px;
	border-radius: 50%;
	z-index: -1;
	transform: scale(0);
	animation: myAnimScale 2s ease infinite;
	visibility: hidden;
}


section .desktop .servicios-container .bloque:hover .ripple {
	visibility: visible;
}
/* Por si quiero poner el efecto del ripple con hover en el circulo, y no con el hover en el bloque entero */
/* .circulo.peque:nth-child(1):hover .ripple {
	visibility: visible;
}
.circulo.peque:nth-child(2):hover .ripple {
	visibility: visible;
}
.circulo.peque:nth-child(3):hover .ripple {
	visibility: visible;
}
.circulo.peque:nth-child(4):hover .ripple {
	visibility: visible;
} */

@keyframes myAnimScale {
	to {
		transform: scale(1.5);
		filter: blur(5px);
		opacity: 0;
	}
}
/* Clase .mostrar para la función scrollAppear */
.mostrar {
	transform: translateX(0);
	transition: transform 0.6s ease;
}
